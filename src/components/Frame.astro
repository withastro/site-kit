---
import Component from './BaseComponent.astro';
import type { Props as BaseProps } from './BaseComponent.astro';
import { joinStyles } from '../utils/styles';

// prettier-ignore
export type Ratio = `${number}/${number}` | `${number} / ${number}` | `${number}:${number}` | `${number} : ${number}` | [number, number];

export interface Props extends BaseProps {
	ratio: Ratio;
	gap: never;
}

const FRACTION_PATTERN = /^\d+\/\d+$/;
const ASPECT_PATTERN = /^\d+\:\d+$/;
function getRatio(value: Ratio) {
	if (Array.isArray(value)) {
		const [start, end] = value;
		return `${start}/${end}`;
	} else if (value.match(FRACTION_PATTERN)) {
		const [start, end] = value.split('/');
		return `${start.trim()}/${end.trim()}`;
	} else if (value?.match(ASPECT_PATTERN)) {
		const [start, end] = value.split(':');
		return `${start.trim()}/${end.trim()}`;
	}
	return undefined;
}

const { ratio, class: className = '', style, ...attrs } = Astro.props;

const safeRatio = getRatio(ratio);

const componentStyle = joinStyles(`aspect-ratio: ${safeRatio}`, style);
---

<Component class:list={['frame', className]} style={componentStyle} {...attrs}>
	<slot />
</Component>

<style>
	.frame {
		overflow: hidden;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	/* Using where here to allow users to directly target the img/video tags for styling */
	:where(.frame) > :global(:where(img, video)) {
		inline-size: 100%;
		block-size: 100%;
		object-fit: cover;
	}
</style>
