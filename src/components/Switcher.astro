---
import type { HTMLAttributes, HTMLTag } from 'astro/types';
import Component from './BaseComponent.astro';
import type { Props as BaseProps } from './BaseComponent.astro';
import { parseCssLength } from '../utils/css.js';
import type { CSSLength } from '../utils/css.js';
import { uid } from '../utils/uid.js';

export interface Props extends BaseProps {
	threshold: CSSLength;
}

const {
	threshold,
	id = uid(),
	class: className = '',
	...attrs
} = Astro.props;

const safeThreshold = parseCssLength(threshold);

const inlineStyle = `#${id} > * {
    flex-grow: 1;
    flex-basis: calc((${safeThreshold} - 100%) * 999);
}`;
---

<Component class:list={['switcher', className]} id={id} {...attrs}>
	<slot />
</Component>

<style set:html={inlineStyle}></style>

<style>
	.switcher {
		display: flex;
		flex-wrap: wrap;
	}

	.switcher > :global(:nth-last-child(n + 5)),
	.switcher > :global(:nth-last-child(n + 5) ~ *) {
		flex-basis: 100%;
	}
</style>
