---
import type { HTMLAttributes, HTMLTag } from "astro/types"
import type { CSSLength } from "../utils/css.js"
import { parseCssLength } from "../utils/css.js"
import type { Padding } from "../utils/padding.js"
import { getPaddingStyles } from "../utils/padding.js"
import { joinStyles } from "../utils/styles.js"

export type Props = HTMLAttributes<"div"> & {
	as?: HTMLTag
	gap?: CSSLength | number
	padding?: Padding
	style?: string
	slot?: string
}

const {
	as: Component = "div",
	slot,
	gap,
	padding,
	class: className = "",
	style,
	...attrs
} = Astro.props

const safeGap = parseCssLength(gap)
const safePadding = getPaddingStyles(padding)

const componentStyle = joinStyles(safeGap && `gap: ${safeGap};`, safePadding, style)
---

<Component slot={slot} style={componentStyle} class={className} {...attrs}>
	<slot />
</Component>
